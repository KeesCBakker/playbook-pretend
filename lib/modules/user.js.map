{"version":3,"sources":["../../src/modules/user.js"],"names":["User","constructor","id","options","name","args","isString","shift","isObject","uniqueId","in","room","clone"],"mappings":"AAAA,a;;AAEA,gC;AACA,wC;;AAEA;;;;;;;;;AASA,MAAMA,IAAN,kBAA6B;AAC3BC,gBAAsB;AACpB,QAAIC,EAAJ,EAAQC,OAAR,EAAiBC,IAAjB,CADoB,kCAANC,IAAM,gDAANA,IAAM;AAEpB,QAAI,iBAAEC,QAAF,CAAWD,KAAK,CAAL,CAAX,CAAJ,EAAyBD,OAAOC,KAAKE,KAAL,EAAP;AACzB,QAAI,iBAAEC,QAAF,CAAWH,KAAK,CAAL,CAAX,CAAJ,EAAyBF,UAAUE,KAAKE,KAAL,EAAV;AACzB,QAAIJ,WAAW,IAAf,EAAqBA,UAAU,EAAV;AACrB,QAAIC,QAAQ,IAAZ,EAAkBD,QAAQC,IAAR,GAAeA,IAAf;AAClB,QAAID,QAAQD,EAAZ,EAAgBA,KAAKC,QAAQD,EAAb,CAAhB;AACKA,SAAK,iBAAEO,QAAF,CAAW,OAAX,CAAL;AACL,UAAMP,EAAN,EAAUC,OAAV;AACD;;AAED;;;;;;AAMAO,KAAIC,IAAJ,EAAU;AACR,QAAIC,QAAQ,iBAAEA,KAAF,CAAQ,IAAR,CAAZ;AACAA,UAAMD,IAAN,GAAa,iBAAEL,QAAF,CAAWK,IAAX,IAAmBA,IAAnB,GAA0BA,KAAKP,IAA5C;AACA,WAAOQ,KAAP;AACD,GAtB0B,C;;;AAyBdZ,I","file":"user.js","sourcesContent":["'use strict'\n\nimport _ from 'lodash'\nimport { User as HubotUser } from 'hubot-async/es2015'\n\n/**\n * Represents a participating user in the chat.\n *\n * NB: not used as mock because it changes constructor to remove id argument.\n *\n * @param  {string} [name]    Name for the user (alternative to giving as attribute in options)\n * @param  {Object} [options] Key/valye user attributes\n * @return User                A new test user\n*/\nclass User extends HubotUser {\n  constructor (...args) {\n    let id, options, name\n    if (_.isString(args[0])) name = args.shift()\n    if (_.isObject(args[0])) options = args.shift()\n    if (options == null) options = {}\n    if (name != null) options.name = name\n    if (options.id) id = options.id\n    else id = _.uniqueId('user_')\n    super(id, options)\n  }\n\n  /**\n   * Create a user clone with a designated room assigned.\n   *\n   * @param  {Room|String} room Room object or name of room to assign\n   * @return User               Clone of user\n  */\n  in (room) {\n    let clone = _.clone(this)\n    clone.room = _.isString(room) ? room : room.name\n    return clone\n  }\n}\n\nexport default User\n"]}