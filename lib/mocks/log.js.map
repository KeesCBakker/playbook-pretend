{"version":3,"sources":["../../src/mocks/log.js"],"names":["constructor","level","logs","heading","headingStyle","fg","addLevel","bg","prefix","Date","toLocaleTimeString","debug","message","push","info","warning","warn","error","lvl"],"mappings":"AAAA,a;;AAEA,gC;;AAEA;;;;AAIe,MAAM;AACnB;;;;AAIAA,gBAA8B,KAAjBC,KAAiB,uEAAT,OAAS;AAC5B,SAAKC,IAAL,GAAY,EAAZ;AACA,qBAAID,KAAJ,GAAYA,KAAZ;AACA,qBAAIE,OAAJ,GAAc,SAAd;AACA,qBAAIC,YAAJ,GAAmB,EAAEC,IAAI,SAAN,EAAnB;AACA,qBAAIC,QAAJ,CAAa,OAAb,EAAsB,IAAtB,EAA4B,EAAED,IAAI,QAAN,EAA5B,EAA8C,MAA9C;AACA,qBAAIC,QAAJ,CAAa,OAAb,EAAsB,IAAtB,EAA4B,EAAED,IAAI,OAAN,EAAeE,IAAI,KAAnB,EAA5B,EAAwD,MAAxD;AACD;;AAED;;;;AAIAC,WAAU;AACR,WAAO,IAAIC,IAAJ,GAAWC,kBAAX,EAAP;AACD;;AAEDC,QAAOC,OAAP,EAAgB;AACd,SAAKV,IAAL,CAAUW,IAAV,CAAe,CAAC,OAAD,EAAUD,OAAV,CAAf;AACA,qBAAID,KAAJ,CAAU,KAAKH,MAAL,EAAV,EAAyBI,OAAzB;AACD;;AAEDE,OAAMF,OAAN,EAAe;AACb,SAAKV,IAAL,CAAUW,IAAV,CAAe,CAAC,MAAD,EAASD,OAAT,CAAf;AACA,qBAAIE,IAAJ,CAAS,KAAKN,MAAL,EAAT,EAAwBI,OAAxB;AACD;;AAEDG,UAASH,OAAT,EAAkB;AAChB,SAAKV,IAAL,CAAUW,IAAV,CAAe,CAAC,SAAD,EAAYD,OAAZ,CAAf;AACA,qBAAII,IAAJ,CAAS,KAAKR,MAAL,EAAT,EAAwBI,OAAxB;AACD;;AAEDK,QAAOL,OAAP,EAAgB;AACd,SAAKV,IAAL,CAAUW,IAAV,CAAe,CAAC,OAAD,EAAUD,OAAV,CAAf;AACA,qBAAIK,KAAJ,CAAU,KAAKT,MAAL,EAAV,EAAyBI,OAAzB;AACD;;AAED,MAAIX,KAAJ,CAAWiB,GAAX,EAAgB;AACd,qBAAIjB,KAAJ,GAAYiB,GAAZ;AACD,GA5CkB,C","file":"log.js","sourcesContent":["'use strict'\n\nimport log from 'npmlog'\n\n/**\n * Keeps log messages in array\n * @module MockLog\n */\nexport default class {\n  /**\n   * Create a new log\n   * @return {Object} Mock log methods (debug, info, warning, error)\n   */\n  constructor (level = 'error') {\n    this.logs = []\n    log.level = level\n    log.heading = '[hubot]'\n    log.headingStyle = { fg: 'magenta' }\n    log.addLevel('debug', 1000, { fg: 'yellow' }, 'dbug')\n    log.addLevel('error', 5000, { fg: 'white', bg: 'red' }, 'ERR!')\n  }\n\n  /**\n   * Put time in front of all logs\n   * @return {string} Current time\n   */\n  prefix () {\n    return new Date().toLocaleTimeString()\n  }\n\n  debug (message) {\n    this.logs.push(['debug', message])\n    log.debug(this.prefix(), message)\n  }\n\n  info (message) {\n    this.logs.push(['info', message])\n    log.info(this.prefix(), message)\n  }\n\n  warning (message) {\n    this.logs.push(['warning', message])\n    log.warn(this.prefix(), message)\n  }\n\n  error (message) {\n    this.logs.push(['error', message])\n    log.error(this.prefix(), message)\n  }\n\n  set level (lvl) {\n    log.level = lvl\n  }\n}\n"]}